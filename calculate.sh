#!/bin/bash

if [[ $# -ne 1 ]]; then
    echo "Help: $0 <record name>"
    exit 1
    fi

RECORD=$1

MYPATH=`dirname $0`
RECORD_ID=`basename $RECORD`
RECORD_DIR=`dirname $RECORD`
RECORD_FILE=$MYPATH/$RECORD
RECORD_WORK_FILE=$MYPATH/$RECORD_DIR/work/$RECORD_ID
RECORD_WORK_ID=$RECORD_DIR/work/$RECORD_ID

echo "record_id: $RECORD_ID - record_dir: $RECORD_DIR - record_work_file: $RECORD_WORK_FILE"

RECORD_FILE_HEA=$RECORD_WORK_FILE.hea
RECORD_FILE_DAT=$RECORD_WORK_FILE.dat

ATC_FILE=$RECORD_FILE.atc
if [[ ! -e $ATC_FILE ]]; then echo "Error: ATC file ($EDF_FILE) does not exist. Convert using atc-converter.py"; exit 1; fi

# .atc.edf is generated by Alive File Converter
#EDF_FILE=$RECORD_FILE.atc.edf
# .edf is generated by me :)
EDF_FILE=$RECORD_FILE.edf
if [[ ! -e $EDF_FILE ]]; then echo "Error: edf file ($EDF_FILE) does not exist."; exit 1; fi

ANN_GQRS_LEAD0=ann-gqrs-s0
ANN_GQRS_LEAD1=ann-gqrs-s1
ANN_ECGPU_LEAD0=ann-ecgpu-s0 
ANN_ECGPU_LEAD1=ann-ecgpu-s1 

ANN_GQRS_LEAD0_FILE=$RECORD_WORK_FILE.$ANN_GQRS_LEAD0
ANN_GQRS_LEAD1_FILE=$RECORD_WORK_FILE.$ANN_GQRS_LEAD1
ANN_ECGPU_LEAD0_FILE=$RECORD_WORK_FILE.$ANN_ECGPU_LEAD0
ANN_ECGPU_LEAD1_FILE=$RECORD_WORK_FILE.$ANN_ECGPU_LEAD1

RR_GQRS_LEAD0_FILE=$RECORD_WORK_FILE.$ANN_GQRS_LEAD0.rr.txt
RR_GQRS_LEAD1_FILE=$RECORD_WORK_FILE.$ANN_GQRS_LEAD1.rr.txt
RR_ECGPU_LEAD0_FILE=$RECORD_WORK_FILE.$ANN_ECGPU_LEAD0.rr.txt
RR_ECGPU_LEAD1_FILE=$RECORD_WORK_FILE.$ANN_ECGPU_LEAD1.rr.txt

OUTPUT_FILE=$RECORD_FILE.output-hrv.txt
DATE=`date`


#echo ""
#echo " ---------------------------------------------------------"
#echo " * removing previous analyses..."
#echo " ---------------------------------------------------------"
#if [[ -e $RECORD_FILE_HEA ]]; then rm -vf $RECORD_FILE_HEA; fi 
#if [[ -e $RECORD_FILE_DAT ]]; then rm -vf $RECORD_FILE_DAT; fi 
#if [[ -e $ANN_GQRS_LEAD0_FILE ]]; then rm -vf $ANN_GQRS_LEAD0_FILE; fi 
#if [[ -e $ANN_GQRS_LEAD1_FILE ]]; then rm -vf $ANN_GQRS_LEAD1_FILE; fi 
#if [[ -e $ANN_ECGPU_LEAD0_FILE ]]; then rm -vf $ANN_ECGPU_LEAD0_FILE; fi 
#if [[ -e $ANN_ECGPU_LEAD1_FILE ]]; then rm -vf $ANN_ECGPU_LEAD1_FILE; fi 
#if [[ -e $RR_GQRS_LEAD0_FILE ]]; then rm -vf $RR_GQRS_LEAD0_FILE; fi 
#if [[ -e $RR_GQRS_LEAD1_FILE ]]; then rm -vf $RR_GQRS_LEAD1_FILE; fi 
#if [[ -e $RR_ECGPU_LEAD0_FILE ]]; then rm -vf $RR_ECGPU_LEAD0_FILE; fi 
#if [[ -e $RR_ECGPU_LEAD1_FILE ]]; then rm -vf $RR_ECGPU_LEAD1_FILE; fi 
#if [[ -e $OUTPUT_FILE ]]; then rm -vf $OUTPUT_FILE; fi 


echo ""
echo " ---------------------------------------------------------"
echo " * edf2mit..."
echo " ---------------------------------------------------------"
edf2mit -i $EDF_FILE -r $RECORD_WORK_ID
if [[ $? -ne 0 ]]; then echo "Error: edf2mit"; exit 1; fi 


echo ""
echo " ---------------------------------------------------------"
echo " * gqrs..."
echo " ---------------------------------------------------------"
gqrs -r $RECORD_WORK_ID -o $ANN_GQRS_LEAD0 -s 0 
if [[ $? -ne 0 ]]; then echo "Error: gqrs lead 0"; exit 1; fi 
gqrs -r $RECORD_WORK_ID -o $ANN_GQRS_LEAD1 -s 1 
if [[ $? -ne 0 ]]; then echo "Error: gqrs lead 1"; exit 1; fi 


echo ""
echo " ---------------------------------------------------------"
echo " * ecgpu..."
echo " ---------------------------------------------------------"
ecgpuwave -r $RECORD_WORK_ID -a $ANN_ECGPU_LEAD0 -s 0
if [[ $? -ne 0 ]]; then echo "Error: ecgpu lead 0"; exit 1; fi 
ecgpuwave -r $RECORD_WORK_ID -a $ANN_ECGPU_LEAD1 -s 1
if [[ $? -ne 0 ]]; then echo "Error: ecgpu lead 1"; exit 1; fi 
rm fort.20 fort.21

echo ""
echo " ---------------------------------------------------------"
echo " * ann2rr..."
echo " ---------------------------------------------------------"
ann2rr -r $RECORD_WORK_ID -a $ANN_GQRS_LEAD0 -i s -V s -p N > $RR_GQRS_LEAD0_FILE
if [[ $? -ne 0 ]]; then echo "Error: ann2rr lead 0"; exit 1; fi 
ann2rr -r $RECORD_WORK_ID -a $ANN_GQRS_LEAD1 -i s -V s -p N > $RR_GQRS_LEAD1_FILE
if [[ $? -ne 0 ]]; then echo "Error: ann2rr lead 1"; exit 1; fi 
ann2rr -r $RECORD_WORK_ID -a $ANN_ECGPU_LEAD0 -i s -V s -p N > $RR_ECGPU_LEAD0_FILE
if [[ $? -ne 0 ]]; then echo "Error: ecgpu lead 0"; exit 1; fi 
ann2rr -r $RECORD_WORK_ID -a $ANN_ECGPU_LEAD1 -i s -V s -p N > $RR_ECGPU_LEAD1_FILE
if [[ $? -ne 0 ]]; then echo "Error: ecgpu lead 0"; exit 1; fi 

echo ""
echo " ---------------------------------------------------------"
echo " * get_hrv short..."
echo " ---------------------------------------------------------"

GET_HRV_OPTS="-L" # print in one line (but no info)

echo $DATE > $OUTPUT_FILE
echo "" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
echo "GQRS - LEAD 0 :" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
get_hrv $GET_HRV_OPTS -R $RR_GQRS_LEAD0_FILE >> $OUTPUT_FILE
if [[ $? -ne 0 ]]; then echo "Error: get_hrv gqrs lead 0"; exit 1; fi 

echo "" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
echo "ECGPU - LEAD 0 :" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
get_hrv $GET_HRV_OPTS -R $RR_ECGPU_LEAD0_FILE >> $OUTPUT_FILE
if [[ $? -ne 0 ]]; then echo "Error: get_hrv ecgpu lead 0"; exit 1; fi 

echo "" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
echo "GQRS - LEAD 1 :" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
get_hrv $GET_HRV_OPTS -R $RR_GQRS_LEAD1_FILE >> $OUTPUT_FILE
if [[ $? -ne 0 ]]; then echo "Error: get_hrv gqrs lead 1"; exit 1; fi 

echo "" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
echo "ECGPU - LEAD 1 :" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
get_hrv $GET_HRV_OPTS -R $RR_ECGPU_LEAD1_FILE >> $OUTPUT_FILE
if [[ $? -ne 0 ]]; then echo "Error: get_hrv ecgpu lead 1"; exit 1; fi 


# again but all lines
echo ""
echo " ---------------------------------------------------------"
echo " * get_hrv long..."
echo " ---------------------------------------------------------"

echo "" >> $OUTPUT_FILE
echo " ---------------------------------------" >> $OUTPUT_FILE
echo " ---------------------------------------" >> $OUTPUT_FILE

GET_HRV_OPTS=""

echo "" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
echo "GQRS - LEAD 0 :" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
get_hrv $GET_HRV_OPTS -R $RR_GQRS_LEAD0_FILE >> $OUTPUT_FILE
if [[ $? -ne 0 ]]; then echo "Error: get_hrv gqrs lead 0"; exit 1; fi 

echo "" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
echo "ECGPU - LEAD 0 :" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
get_hrv $GET_HRV_OPTS -R $RR_ECGPU_LEAD0_FILE >> $OUTPUT_FILE
if [[ $? -ne 0 ]]; then echo "Error: get_hrv ecgpu lead 0"; exit 1; fi 

echo "" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
echo "GQRS - LEAD 1 :" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
get_hrv $GET_HRV_OPTS -R $RR_GQRS_LEAD1_FILE >> $OUTPUT_FILE
if [[ $? -ne 0 ]]; then echo "Error: get_hrv gqrs lead 1"; exit 1; fi 

echo "" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
echo "ECGPU - LEAD 1 :" >> $OUTPUT_FILE
echo "---------------" >> $OUTPUT_FILE
get_hrv $GET_HRV_OPTS -R $RR_ECGPU_LEAD1_FILE >> $OUTPUT_FILE
if [[ $? -ne 0 ]]; then echo "Error: get_hrv ecgpu lead 1"; exit 1; fi 
echo ""
echo " ---------------------------------------------------------"
echo "done."
echo " ---------------------------------------------------------"
exit 0

# edf2mit -i e63w4ulrq3o2b32pv3u9avw2p.atc.edf -r e63w4ulrq3o2b32pv3u9avw2p
# 
# ecgpuwave -r e63w4ulrq3o2b32pv3u9avw2p -a ecgpu -s 1
# gqrs -r e63w4ulrq3o2b32pv3u9avw2p -o gqrs -s 1
# 
# ann2rr -r e63w4ulrq3o2b32pv3u9avw2p -a gqrs0 -i s -V s -p N  > e63w4ulrq3o2b32pv3u9avw2p.gqrs0.rr.txt
# 
# get_hrv -R e63w4ulrq3o2b32pv3u9avw2p.gqrs0.rr.txt > e63w4ulrq3o2b32pv3u9avw2p.gqrs0.rr.hrv

